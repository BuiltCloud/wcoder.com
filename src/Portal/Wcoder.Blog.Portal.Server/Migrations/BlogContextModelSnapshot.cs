// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wcoder.Blog.Infrastructure;

namespace Wcoder.Blog.Portal.Server.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Wcoder.Blog.Protocol.Models.Article", b =>
                {
                    b.Property<long>("Id");

                    b.Property<long>("CatalogId");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<long>("DeletedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Tags");

                    b.Property<long>("TenantId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<long>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("CatalogId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Wcoder.Blog.Protocol.Models.Catalog", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<long>("DeletedBy");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PictureId")
                        .HasMaxLength(50);

                    b.Property<string>("PictureUri")
                        .HasMaxLength(200);

                    b.Property<long>("TenantId");

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<long>("UpdatedBy");

                    b.HasKey("Id");

                    b.ToTable("Catalogs");
                });

            modelBuilder.Entity("Wcoder.Blog.Protocol.Models.Tenant", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CreatedBy");

                    b.Property<bool>("Deleted");

                    b.Property<long>("DeletedBy");

                    b.Property<string>("LogoId")
                        .HasMaxLength(50);

                    b.Property<string>("LogoUri")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("Updated")
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<long>("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tenant");

                    b.HasData(
                        new { Id = 1L, Created = new DateTime(2018, 10, 25, 9, 25, 50, 974, DateTimeKind.Utc), CreatedBy = 0L, Deleted = false, DeletedBy = 0L, LogoId = "", LogoUri = "", Name = "wcoder.com", Updated = new DateTime(2018, 10, 25, 9, 25, 50, 974, DateTimeKind.Utc), UpdatedBy = 0L }
                    );
                });

            modelBuilder.Entity("Wcoder.Blog.Protocol.Models.Article", b =>
                {
                    b.HasOne("Wcoder.Blog.Protocol.Models.Catalog", "Catalog")
                        .WithMany()
                        .HasForeignKey("CatalogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
